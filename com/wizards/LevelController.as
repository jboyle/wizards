package com.wizards{	import com.wizards.levels.Level;	import com.wizards.levels.LevelEvent;		import flash.display.MovieClip;		public class LevelController extends MovieClip	{		private var _levels:Array;		private var _currentLevel:uint;		public function LevelController()		{			_levels = new Array();			_currentLevel = 0;		}				public function update():void{			var l:Level = _levels[_currentLevel] as Level;			if(l != null){				l.update();			}		}				public function addLevel(newLevel:Level){			trace("Adding Level");			newLevel.addEventListener(LevelEvent.CHANGE_LEVEL, handleLevelChange);			newLevel.addEventListener(LevelEvent.CHANGE_ROOM, handleRoomChange);			newLevel.addEventListener(LevelEvent.CHANGE_DIRECTION, handleDirectionChange);			if(_levels.push(newLevel) == 1){				level = 0;			}		}				public function getSpellCollision(tx:Number, ty:Number):GameObject{			var level:Level = _levels[_currentLevel] as Level;			return level.getSpellCollision(tx, ty);		}				private function handleLevelChange(ev:LevelEvent){			trace("changingLevel");			level = ev.level;			dispatchClearEvent();		}				private function handleRoomChange(ev:LevelEvent){			dispatchClearEvent();		}				private function handleDirectionChange(ev:LevelEvent){			dispatchClearEvent();		}				private function dispatchClearEvent(){			var ev:LevelEvent = new LevelEvent(LevelEvent.CLEAR);			dispatchEvent(ev);		}				private function removeCurrentLevel():Boolean{			var ret = true;			try{				removeChild(_levels[_currentLevel]);			} catch(er:ArgumentError){				ret = false;			}			return ret;		}				public function set level(nl:uint):void{			if(nl < _levels.length){				//trace("badger");				removeCurrentLevel();				_currentLevel = nl;				addChild(_levels[_currentLevel]);			}		}				public function get level():uint{			return _currentLevel;		}				public function get levelObj():Level{			return _levels[_currentLevel];		}	}}