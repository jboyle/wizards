package com.wizards.entities{	import com.wizards.GameObject;
	import com.wizards.WizardsG;
	
	import flash.events.Event;
	import flash.filters.GlowFilter;	public class Door1Symbol extends GameObject	{		private var _fadeSquares:Array;		private var _activeSquares:Array;		private var _inactiveSquares:Array;		private var _fadingIn:Boolean;				private var _glowTimer:Number;		private var _glowTime:Number;		private var _glowIn:Boolean;				private var _dead:Boolean;		public function Door1Symbol()		{			super();			_glowTime = 2;			_glowTimer = 0;			_glowIn = false;			_fadeSquares = new Array();			_fadingIn = false;			for(var i = 0; i < numChildren; i++){				var fs:FadeInSquare = getChildAt(i) as FadeInSquare;				if(fs != null){					fs.gotoAndStop(1);					_fadeSquares.push(fs);				}			}			hp = 1;			_dead = false;			//trace(_fadeSquares);		}				public function fadeIn(){			_activeSquares = new Array();			_inactiveSquares = _fadeSquares.slice();			_fadingIn = true;		}				override public function kill():void{			if(!_dead){				fadeIn();				_dead = true;			}			super.kill();		}		override public function update():void{			trace("symbol update");			super.update();			if(_fadingIn){				activateSquare();				activateSquare();			} else if(_glowIn){				_glowTimer += WizardsG.TIME_DIFF;				if(_glowTimer < _glowTime){					var u = _glowTimer / _glowTime;					var glowFilter:GlowFilter = new GlowFilter(0xFFFF00,1,120*u,120*u);					this.filters = [glowFilter];				} else {					_glowIn = false;					var ev:Event = new Event(Event.COMPLETE);					dispatchEvent(ev);				}			}		}				private function activateSquare(){			if(_activeSquares.length != _fadeSquares.length){				var rSquare:int = Math.random() * _inactiveSquares.length;				var fs:FadeInSquare = _inactiveSquares[rSquare] as FadeInSquare;				fs.play();				_activeSquares.push(fs);				_inactiveSquares.splice(rSquare,1);			} else {				_fadingIn = false;				_glowIn = true;			}		}	}}